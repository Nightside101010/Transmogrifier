//	Copyright 2017 Nightside
//
//	This program is free software: you can redistribute it and/or modify
//	it under the terms of the GNU General Public License as published by
//	the Free Software Foundation, either version 3 of the License, or
//	(at your option) any later version.
//	
//	This program is distributed in the hope that it will be useful,
//	but WITHOUT ANY WARRANTY; without even the implied warranty of
//	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//	GNU General Public License for more details.
//	
//	You should have received a copy of the GNU General Public License
//	along with this program.  If not, see <http://www.gnu.org/licenses/>.
//
//	HEAVILY inspired by Kerbas Ad Astra's masterpiece of ModuleManager configury, SMURFF, thanks K.A.A.!

//Single part custom scaling example
//@PART[partName]
//{
//	%TransmogrifyExclude = true
//
//	customScalar = x //<custom value here
//
//	@rescaleFactor = #$customScalar$
//}



//***SETTING***
//Set transmogrifierScalar to whatever rescaling you want. 1.6 is approximately real sized.(1.6*0.625 = 1)
//This scales the Mk1 pod to a diameter of 2 meters, similar to the Mercury capsule.

TRANSMOGRIFIER 
{
	transmogrifierScalar = 1.6 //1.6 will make stock parts approximately real sized.
}

//***TRANSMOGRIFIER CALCULATIONS - DO NOT MODIFY BELOW***
@TRANSMOGRIFIER:FIRST
{
	name = transmogrifier
	areaScalar = #$transmogrifierScalar$ //Primarily used to buff engine thusts.
	@areaScalar != 2 //Squares the base value: 1.6^2 = 2.56  
 
	volumeScalar = #$transmogrifierScalar$ //Used for volume and mass changes.
	@volumeScalar != 3 //Cubes base value: 1.6^3= 4.096
}


//*** EXCLUSIONS ***
//Sadly, I haven't been able to resize EVA kerbals, if you figure it out let me know.
@PART[kerbalEVA,kerbalEVAfemale]:FIRST
{
	TransmogrifyExclude = true
}

//Stock fairings need special treatment, exclude from this pass.
@PART[*]:HAS[@MODULE[ModuleProceduralFairing]]:First
{
	TransmogrifyExclude = true
}

//***RESIZE PARTS*** No refunds

@PART[*]:HAS[~TransmogrifyExclude[*rue]]:FOR[TRANSMOGRIFIER]
{
	&rescaleFactor = 1.25     //Catch any parts without rescaleFactor defined (old squad parts). This might do something bad if a part is not already 1.25m...
	@rescaleFactor *= #$@TRANSMOGRIFIER/transmogrifierScalar$ //Rescale all by the transmogrifier value
}

//***PAYLOAD FAIRINGS***
//FIXME ignores autotrusses for now. Not sure if 
@PART[*]:HAS[@MODULE[ModuleProceduralFairing]]:FOR[TRANSMOGRIFIER]
{	
	@MODEL,0 //[*] //see if i can catch both model defs here
	{	
		&scale = 1.0, 1.0, 1.0
		@scale[*] *= #$@TRANSMOGRIFIER/transmogrifierScalar$
	}
//I don't use fairing AutoTruss, so this is off	unless there is some interest.
//	@MODEL,1 
//	{
//		//model = Squad/Parts/Aero/fairings/AutoTruss
//		&scale = 1.0, 1.0, 1.0
//		@scale[*] *= #$@TRANSMOGRIFIER/transmogrifierScalar$
//		//position = 0.0,0.22,0.0
//	}	
	//rescaleFactor = 1	
//	@node_stack_interstage01a,1 *= #$@TRANSMOGRIFIER/transmogrifierScalar$
//	@node_stack_interstage01b,1 *= #$@TRANSMOGRIFIER/transmogrifierScalar$
//	
//	@node_stack_interstage02a,1 *= #$@TRANSMOGRIFIER/transmogrifierScalar$
//	@node_stack_interstage02b,1 *= #$@TRANSMOGRIFIER/transmogrifierScalar$
//
//	@node_stack_interstage03a,1 *= #$@TRANSMOGRIFIER/transmogrifierScalar$
//	@node_stack_interstage03b,1 *= #$@TRANSMOGRIFIER/transmogrifierScalar$
//	
//	@node_stack_interstage04a,1 *= #$@TRANSMOGRIFIER/transmogrifierScalar$
//	@node_stack_interstage04b,1 *= #$@TRANSMOGRIFIER/transmogrifierScalar$
//
//	@node_stack_interstage05a,1 *= #$@TRANSMOGRIFIER/transmogrifierScalar$
//	@node_stack_interstage05b,1 *= #$@TRANSMOGRIFIER/transmogrifierScalar$
//
//	@node_stack_interstage06a,1 *= #$@TRANSMOGRIFIER/transmogrifierScalar$
//	@node_stack_interstage06b,1 *= #$@TRANSMOGRIFIER/transmogrifierScalar$
	
	@node_stack_top,1 *= #$@TRANSMOGRIFIER/transmogrifierScalar$
	@node_stack_bottom,1 *= #$@TRANSMOGRIFIER/transmogrifierScalar$
	
	//fx_gasBurst_white = 0.0, 0.3, 0.0, 0.0, 1.0, 0.0, deploy
	
	@MODULE[ModuleProceduralFairing]
	{
		@baseRadius *= #$@TRANSMOGRIFIER/transmogrifierScalar$
		@maxRadius *= #$@TRANSMOGRIFIER/transmogrifierScalar$
		@capRadius *= #$@TRANSMOGRIFIER/transmogrifierScalar$
		@xSectionHeightMax *= #$@TRANSMOGRIFIER/transmogrifierScalar$

		//UnitAreaMass = 0.016 //fixme
		//UnitAreaCost = 18 //fixme
	}
	@MODULE[ModuleCargoBay]
	{
		@lookupRadius *= #$@TRANSMOGRIFIER/transmogrifierScalar$
	}	
}
@PART[*]:HAS[@MODULE[ModuleLiftingSurface],~TransmogrifyExclude[*rue]]:FOR[TRANSMOGRIFIER]
{
	@MODULE[ModuleLiftingSurface]
	{
		@deflectionLiftCoeff *= #$@TRANSMOGRIFIER/areaScalar$
	}
}